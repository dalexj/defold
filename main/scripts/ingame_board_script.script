require "main.modules.tilemap"
require "main.modules.mouse_cursor"
require "main.modules.ingame_state"
require "main.modules.unit_data"

local TILE_SIZE = 40
local TILEMAP_URL = "/board#board"

local function table_contains(table, element)
	for _, v in pairs(table) do
		if v.x == element.x and v.y == element.y then return true end
	end
	return false
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.placement_spots = {}
	local _, _, width, height = tilemap.get_bounds(TILEMAP_URL)
	for i = 1, width do
		for j = 1, height do
			if tilemap.get_tile(TILEMAP_URL, "board", i, j) == 2 then
				table.insert(self.placement_spots, { x = i, y = j })
			end
		end
	end
end

function on_input(self, action_id, action)
	local tile = get_tile_within_coords(TILEMAP_URL, TILE_SIZE, action)
	local is_hovering_tilemap_id = mouse_hovering_id == "board_tilemap"
	
	if is_hovering_tilemap_id and tile == nil then
		mouse_hovering_id = nil
	end
	if tile then
		local tile_id = tilemap.get_tile(TILEMAP_URL, "board", tile.x, tile.y)
		if table_contains(self.placement_spots, tile) then
			mouse_hovering_id = "board_tilemap"
			if action_id == hash("LEFT_CLICK") and action.released then
				if ingame_state.gui_selected_unit then
					tilemap.set_tile(TILEMAP_URL, "board", tile.x, tile.y, get_tile_index_from_unit_id(ingame_state.gui_selected_unit))
				end
			end
		elseif is_hovering_tilemap_id then
			mouse_hovering_id = nil
		end
	end
	calculate_cursor()
end

function final(self)
	if mouse_hovering_id == "mouse_hovering_id" then
		mouse_hovering_id = nil
	end
	calculate_cursor()
end
